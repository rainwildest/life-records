type StatisticalDetails {
  pay: Int
  income: Int
  total(input: StatisticalDetailsProps): Int
  totalDetails(input: StatisticalDetailsProps): [TotalField]
  details(input: StatisticalDetailsProps): [CostDetails]
}

type TotalField {
  total: Int
  amounts: Int
  purchaseTime: String
}

type GeneralizationField {
  pay: Int
  income: Int
  purchaseTime: String
}

type ExpenditureAndIncomeField {
  pay: Int
  income: Int
  expenseIcon: String
  expenseName: String
  purchaseTime: String
}

type StatisticalBooksField {
  pay: Int
  income: Int
}

type StatisticalFundPlanField {
  total: Int
}

input StatisticalDetailsProps {
  date: String
  type: String
  format: String
  expenseId: String
  groupFormat: String
}

type Query {
  statisticalCostDetails(input: StatisticalDetailsProps): StatisticalDetails
  # 概括
  statisticalGeneralization(year: String): [GeneralizationField]
  # 支出 或 收入
  statisticalExpenditureOrIncome(date: String, type: String = "pay"): [ExpenditureAndIncomeField]
  # statisticalBudget(date: String): []
  statisticalBooks(bookId: String): StatisticalBooksField
  statisticalFundPlan(input: FundPlanQueryProps): StatisticalFundPlanField
}
