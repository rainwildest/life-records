type StatisticalDetails {
  pay: Int
  income: Int
  total(input: StatisticalDetailsProps): Int
  totalDetails(input: StatisticalDetailsProps): [TotalField]
  details(input: StatisticalDetailsProps): [CostDetails]
}

type TotalField {
  total: Int
  amounts: Int
  purchaseTime: String
}

type Generalization {
  pay: Int
  income: Int
  purchaseTime: String
}

type ExpenditureAndIncome {
  pay: Int
  income: Int
  expenseIcon: String
  expenseName: String
  purchaseTime: String
}

type StatisticalBooksField {
  pay: Int
  income: Int
}

type StatisticalFundPlan {
  total: Int
}

input StatisticalDetailsProps {
  date: String
  type: String
  format: String
  expenseId: String
  groupFormat: String
}

input StatisticalBudgetProps {
  date: String
  format: String
  # groupFormat: String
}

input StatisticalBooksProps {
  bookId: String
  expenseId: String
}

type StatisticalBudget {
  amounts: Int
  original: Int
  expenseName: String
  expenseIcon: String
  createdAt: String
}

type GeneralizationByBudget {
  budgetTotal: String
  monthTotal: String
  createdAt: String
}

type Query {
  statisticalCostDetails(input: StatisticalDetailsProps): StatisticalDetails
  # 概括
  statisticalGeneralization(year: String): [Generalization]
  # 支出 或 收入
  statisticalExpenditureOrIncome(date: String, type: String = "pay"): [ExpenditureAndIncome]
  # 预算统计
  statisticalBudget(input: StatisticalBudgetProps): [StatisticalBudget]
  statisticalBudgetByYear(date: String): [GeneralizationByBudget]

  statisticalBooks(input: StatisticalBooksProps): StatisticalBooksField
  statisticalFundPlan(input: FundPlanQueryProps): StatisticalFundPlan
}
