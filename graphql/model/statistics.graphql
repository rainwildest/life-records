# import CostDetailsOptions from '../fragments/cost-details.graphql';
# import AccountBooksOptions from '../fragments/account-books.graphql';

query getCostTotal($input: StatisticalDetailsOptions) {
  statisticalCostDetails(input: $input) {
    pay
    income
    total(input: $input)
  }
}

query getCostTotalDetails($input: StatisticalDetailsOptions, $details: StatisticalDetailsOptions) {
  statisticalCostDetails(input: $input) {
    pay
    income
    total(input: $input)
    totalDetails(input: $details) {
      total
      amounts
      purchaseTime
    }
  }
}

query getCostDataDetails($input: StatisticalDetailsOptions) {
  statisticalCostDetails(input: $input) {
    details(input: $input) {
      ...CostDetailsOptions
      expense {
        id
        expenseName
        expenseType
        expenseIcon
      }
      book {
        ...AccountBooksOptions
      }
    }
  }
}

query getClassifiedStatistics($date: String, $type: String = "pay") {
  statisticalExpenditureOrIncome(date: $date, type: $type) {
    pay
    income
    expenseName
    expenseIcon
    purchaseTime
  }
}

query generalization($year: String) {
  statisticalGeneralization(year: $year) {
    pay
    income
    purchaseTime
  }
}

query expenditure($date: String, $type: String = "pay") {
  statisticalExpenditureOrIncome(date: $date, type: $type) {
    pay
    expenseName
    purchaseTime
    expenseIcon
  }
}

query income($date: String, $type: String = "income") {
  statisticalExpenditureOrIncome(date: $date, type: $type) {
    income
    expenseName
    purchaseTime
    expenseIcon
  }
}

query statisticalBooks($bookId: String) {
  statisticalBooks(bookId: $bookId) {
    pay
    income
  }
}

query statisticalFundPlan($input: FundPlanQueryOptions) {
  statisticalFundPlan(input: $input) {
    total
  }
}
